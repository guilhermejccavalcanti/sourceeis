revision;file;methodsignature;leftbody;basebody;rightbody
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisdot\revisions\rev_11d92e2_ba34be0\rev_11d92e2-ba34be0;\sisdot-core\src\main\java\br\mil\eb\cds\sisdot\servico\FamiliaMaterialServico;pesquisar(String,SituacaoCadastral);;;public List<FamiliaMaterial> pesquisar(String valor, SituacaoCadastral status) {
		return familiaRepositorio.pesquisar(valor, status);
	}
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_46cbe3b_ae86c9f\rev_46cbe3b-ae86c9f;\sisbol-core\src\main\java\br\mil\eb\cds\sisbol\boletim\modelo\PostoGraduacao;getId();;;@Override
	public Long getId() {
		return id;
	}
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_46cbe3b_ae86c9f\rev_46cbe3b-ae86c9f;\sisbol-core\src\main\java\br\mil\eb\cds\sisbol\boletim\repositorio\PostoGraduacaoRepositorioJPA;getClasseEntidade();;;@Override
	protected Class<PostoGraduacao> getClasseEntidade() {
		return PostoGraduacao.class;
	}
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_46cbe3b_ae86c9f\rev_46cbe3b-ae86c9f;\sisbol-core\src\main\java\br\mil\eb\cds\sisbol\boletim\servico\PostoGraduacaoServico;getRepositorioJPA();;;@Override
	protected RepositorioJPAGenerico<PostoGraduacao> getRepositorioJPA() {
		return repositorio;
	}
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_46cbe3b_ae86c9f\rev_46cbe3b-ae86c9f;\sisbol-core\src\main\java\br\mil\eb\cds\sisbol\boletim\servico\PostoGraduacaoServico;getClasseEntidade();;;@Override
	protected Class<PostoGraduacao> getClasseEntidade() {
		return PostoGraduacao.class;
	}
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_46cbe3b_ae86c9f\rev_46cbe3b-ae86c9f;\sisbol-core\src\test\java\br\mil\eb\cds\sisbol\boletim\modelo\PostoGraduacaoTest;criarPostoGraduacao();;;public PostoGraduacao criarPostoGraduacao(){
		PostoGraduacao posto = new PostoGraduacao();
		posto.setId(ID_POSTO_GRADUACAO);
		posto.setNome(NOME);
		return posto;
	}
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_46cbe3b_ae86c9f\rev_46cbe3b-ae86c9f;\sisbol-core\src\test\java\br\mil\eb\cds\sisbol\boletim\modelo\PostoGraduacaoTest;testaCriaPostoGraduacao();;;@Test
	public void testaCriaPostoGraduacao(){
		PostoGraduacao posto = criarPostoGraduacao();
		assertTrue(posto.getId() == ID_POSTO_GRADUACAO);
		assertTrue(posto.getNome().equals(NOME));
	}
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_46cbe3b_ae86c9f\rev_46cbe3b-ae86c9f;\sisbol-web\src\main\java\br\mil\eb\cds\sisbol\boletim\resources\PostoGraduacaoResource;getServico();;;@Override
	protected ServicoGenerico<PostoGraduacao> getServico() {
		return getPostoGraduacaoServico();
	}
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_46cbe3b_ae86c9f\rev_46cbe3b-ae86c9f;\sisbol-web\src\main\java\br\mil\eb\cds\sisbol\boletim\resources\PostoGraduacaoResource;getClasseEntidade();;;@Override
	protected Class<PostoGraduacao> getClasseEntidade() {
		return PostoGraduacao.class;
	}
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_b58ae04_3ec9ffc\rev_b58ae04-3ec9ffc;\sisbol-web\src\main\java\br\mil\eb\cds\sisbol\boletim\resources\BoletimResource;associarNotas(RequisicaoAssociarNota);;;@PUT
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON)
	@Path("/associarNota")
	public Boletim associarNotas(RequisicaoAssociarNota requisicao){
		return ((BoletimServico)getServico()).associaNota(requisicao.getIdBoletim(), requisicao.getIdNotas());
	}
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_499ee18_943b99b\rev_499ee18-943b99b;\sisbol-core\src\main\java\br\mil\eb\cds\sisbol\boletim\modelo\PostoGraduacao;getId();;;@Override
	public Long getId() {
		return id;
	}
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_499ee18_943b99b\rev_499ee18-943b99b;\sisbol-core\src\main\java\br\mil\eb\cds\sisbol\boletim\repositorio\PostoGraduacaoRepositorioJPA;getClasseEntidade();;;@Override
	protected Class<PostoGraduacao> getClasseEntidade() {
		return PostoGraduacao.class;
	}
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_499ee18_943b99b\rev_499ee18-943b99b;\sisbol-core\src\main\java\br\mil\eb\cds\sisbol\boletim\servico\PostoGraduacaoServico;getRepositorioJPA();;;@Override
	protected RepositorioJPAGenerico<PostoGraduacao> getRepositorioJPA() {
		return repositorio;
	}
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_499ee18_943b99b\rev_499ee18-943b99b;\sisbol-core\src\main\java\br\mil\eb\cds\sisbol\boletim\servico\PostoGraduacaoServico;getClasseEntidade();;;@Override
	protected Class<PostoGraduacao> getClasseEntidade() {
		return PostoGraduacao.class;
	}
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_499ee18_943b99b\rev_499ee18-943b99b;\sisbol-web\src\main\java\br\mil\eb\cds\sisbol\boletim\resources\PostoGraduacaoResource;getServico();;;@Override
	protected ServicoGenerico<PostoGraduacao> getServico() {
		return getPostoGraduacaoServico();
	}
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_499ee18_943b99b\rev_499ee18-943b99b;\sisbol-web\src\main\java\br\mil\eb\cds\sisbol\boletim\resources\PostoGraduacaoResource;getClasseEntidade();;;@Override
	protected Class<PostoGraduacao> getClasseEntidade() {
		return PostoGraduacao.class;
	}
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_499ee18_943b99b\rev_499ee18-943b99b;\sisbol-web\src\test\java\br\mil\eb\cds\sisbol\features\postoGraduacao\CadastroPostoGraduacaoTest;testarCadastro();;;@Test
    public void testarCadastro() {
        Map<String, Object> json = criarJson("asdf");
        cadastrar(json, STATUS_OK);
    }
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_499ee18_943b99b\rev_499ee18-943b99b;\sisbol-web\src\test\java\br\mil\eb\cds\sisbol\features\postoGraduacao\CadastroPostoGraduacaoTest;testarCamposObrigatorios();;;@Test
    public void testarCamposObrigatorios(){
        Map<String, Object> json = criarJson("");
        cadastrar(json , STATUS_ERROR);
        json = criarJson("asda");
        cadastrar(json , STATUS_OK);
    }
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_499ee18_943b99b\rev_499ee18-943b99b;\sisbol-web\src\test\java\br\mil\eb\cds\sisbol\features\postoGraduacao\ExcluirPostoGraduacaoTest;testeExcluirEntidadeCadastrada();;;@Test
    public void testeExcluirEntidadeCadastrada() {
        Map<String, Object> json = criarJson("afaaf");
        Integer id = cadastrar(json, STATUS_OK);

        delete(ENDPOINT + getPath() + "?id=" + id).then().statusCode(204);
        recuperarPorId(id, 204);
    }
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_499ee18_943b99b\rev_499ee18-943b99b;\sisbol-web\src\test\java\br\mil\eb\cds\sisbol\features\postoGraduacao\ExcluirPostoGraduacaoTest;testeExcluiEntidadeNaoCadastrada();;;@Test
    public void testeExcluiEntidadeNaoCadastrada()  {
        delete(ENDPOINT + getPath() + "?id=" + 10000).then().statusCode(500);
    }
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_499ee18_943b99b\rev_499ee18-943b99b;\sisbol-web\src\test\java\br\mil\eb\cds\sisbol\features\postoGraduacao\RecuperarPostoGraduacaoTest;testeListaNaoVaziaComBasePopulada();;;@Test
    public void testeListaNaoVaziaComBasePopulada() {
        popularBase(5);
        RespostaJson todos = recuperarTodos();
        assertFalse(todos.isEmpty());
    }
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_499ee18_943b99b\rev_499ee18-943b99b;\sisbol-web\src\test\java\br\mil\eb\cds\sisbol\features\postoGraduacao\RecuperarPostoGraduacaoTest;testeTamanhoLista();;;@Test
    public void testeTamanhoLista() {
        int tamanho = 5;
        popularBase(tamanho);
        RespostaJson todos = recuperarTodos();
        assertTrue(todos.size() == tamanho);
    }
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_499ee18_943b99b\rev_499ee18-943b99b;\sisbol-web\src\test\java\br\mil\eb\cds\sisbol\features\postoGraduacao\RecuperarPostoGraduacaoTest;popularBase(int);;;public void popularBase(int qtd) {

        if (qtd > 9) {
            throw new RuntimeException("Tamanho invalido");
        }

        for (int i = 1; i <= qtd; i++ ) {
            Map<String, Object> json1 = criarJson("Dm"+i);
            cadastrar(json1, STATUS_OK);

        }
    }
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_3a745b0_86d0ba1\rev_3a745b0-86d0ba1;\sisbol-web\src\test\java\br\mil\eb\cds\sisbol\features\tipoDocumento\cadastro\CadastrarTipoDocumentoSpec;before();;;@Before
    public void before() {
        apagarBase();
    }
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_3a745b0_86d0ba1\rev_3a745b0-86d0ba1;\sisbol-web\src\test\java\br\mil\eb\cds\sisbol\features\tipoDocumento\cadastro\CadastrarTipoDocumentoSpec;que_eu_precise_criar_um_Tipo_de_Documento_de_nome(String);;;@Dado("^que eu precise criar um Tipo de Documento de nome \"([^\"]*)\"$")
    public void que_eu_precise_criar_um_Tipo_de_Documento_de_nome(String nome) throws Throwable {
        json = criarJson(nome);
    }
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_3a745b0_86d0ba1\rev_3a745b0-86d0ba1;\sisbol-web\src\test\java\br\mil\eb\cds\sisbol\features\tipoDocumento\cadastro\CadastrarTipoDocumentoSpec;eu_requisitar_que_este_Tipo_de_Documento_seja_criado();;;@Quando("^eu requisitar que este Tipo de Documento seja criado$")
    public void eu_requisitar_que_este_Tipo_de_Documento_seja_criado() throws Throwable {
        statusCode = cadastrar(json);
    }
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_3a745b0_86d0ba1\rev_3a745b0-86d0ba1;\sisbol-web\src\test\java\br\mil\eb\cds\sisbol\features\tipoDocumento\cadastro\CadastrarTipoDocumentoSpec;devo_receber_uma_confirmação_de_no_cadastro(String);;;@Entao("^devo receber uma confirmação de \"([^\"]*)\" no cadastro$")
    public void devo_receber_uma_confirmação_de_no_cadastro(String result) throws Throwable {
        if(result.equals("sucesso")){
            assertTrue(statusCode == 200);
        }else{
            assertTrue(statusCode == 500);
        }
    }
C:\Users\Guilherme Cavalcanti\Desktop\testeis\projects\sisbol\revisions\rev_3a745b0_86d0ba1\rev_3a745b0-86d0ba1;\sisbol-web\src\test\java\br\mil\eb\cds\sisbol\features\tipoDocumento\cadastro\CadastrarTipoDocumentoSpec;que_eu_possuo_um_Tipo_de_Documento_de_nome_ja_criado(String);;;@Dado("^que eu possuo um Tipo de Documento de nome \"([^\"]*)\" ja criado$")
    public void que_eu_possuo_um_Tipo_de_Documento_de_nome_ja_criado(String nome) throws Throwable {
        json = criarJson(nome);
        cadastrar(json);
    }
